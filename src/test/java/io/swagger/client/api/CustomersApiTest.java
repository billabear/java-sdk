/*
 * BillaBear
 * The REST API provided by BillaBear
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@billabear.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.Customer;
import io.swagger.client.model.Error;
import io.swagger.client.model.InlineResponse200;
import io.swagger.client.model.InlineResponse2001;
import io.swagger.client.model.InlineResponse20011;
import io.swagger.client.model.InlineResponse2002;
import io.swagger.client.model.InlineResponse2003;
import io.swagger.client.model.InlineResponse2004;
import io.swagger.client.model.InlineResponse2005;
import io.swagger.client.model.InlineResponse2006;
import io.swagger.client.model.InlineResponse400;
import io.swagger.client.model.SeatsAddBody;
import io.swagger.client.model.SeatsRemoveBody;
import io.swagger.client.model.VoucherCode;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for CustomersApi
 */
@Ignore
public class CustomersApiTest {

    private final CustomersApi api = new CustomersApi();

    /**
     * Add Seats
     *
     * Adds seats to a per seat subscription&lt;br&gt;&lt;br&gt;&lt;strong&gt;Since 1.1.4&lt;/strong&gt;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addSeatsSubscriptionsTest() throws Exception {
        SeatsAddBody body = null;
        String subscriptionId = null;
        InlineResponse20011 response = api.addSeatsSubscriptions(body, subscriptionId);

        // TODO: test validations
    }
    /**
     * Apply voucher
     *
     * Apply Voucher to Customer
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void applyVoucherToCustomerTest() throws Exception {
        VoucherCode body = null;
        String customerId = null;
        String response = api.applyVoucherToCustomer(body, customerId);

        // TODO: test validations
    }
    /**
     * Create
     *
     * Create a customer
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createCustomerTest() throws Exception {
        Customer body = null;
        Customer response = api.createCustomer(body);

        // TODO: test validations
    }
    /**
     * Disable Customer
     *
     * Disable customer
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void disableCustomerTest() throws Exception {
        String customerId = null;
        String response = api.disableCustomer(customerId);

        // TODO: test validations
    }
    /**
     * Enable Customer
     *
     * Enable a customer
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void enableCustomerTest() throws Exception {
        String customerId = null;
        String response = api.enableCustomer(customerId);

        // TODO: test validations
    }
    /**
     * List Customer Active Subscriptions
     *
     * List all Active customer subscriptions
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getActiveForCustomerTest() throws Exception {
        String customerId = null;
        InlineResponse2006 response = api.getActiveForCustomer(customerId);

        // TODO: test validations
    }
    /**
     * List
     *
     * List all customers
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAllCustomersTest() throws Exception {
        Integer limit = null;
        String lastKey = null;
        String email = null;
        String country = null;
        String reference = null;
        String externalReference = null;
        InlineResponse200 response = api.getAllCustomers(limit, lastKey, email, country, reference, externalReference);

        // TODO: test validations
    }
    /**
     * Detail
     *
     * Info for a specific customer
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getCustomerByIdTest() throws Exception {
        String customerId = null;
        Customer response = api.getCustomerById(customerId);

        // TODO: test validations
    }
    /**
     * Fetch Customer Limits
     *
     * Limits for a specific customer
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getCustomerLimitsByIdTest() throws Exception {
        String customerId = null;
        InlineResponse2001 response = api.getCustomerLimitsById(customerId);

        // TODO: test validations
    }
    /**
     * List Customer Subscriptions
     *
     * List all customer subscriptions&lt;br&gt;&lt;br&gt;&lt;strong&gt;Since 1.1&lt;/strong&gt;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getForCustomerTest() throws Exception {
        String customerId = null;
        InlineResponse2006 response = api.getForCustomer(customerId);

        // TODO: test validations
    }
    /**
     * List Customer Invoices
     *
     * List Customer Invoices
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getInvoicesForCustomerTest() throws Exception {
        String customerId = null;
        InlineResponse2004 response = api.getInvoicesForCustomer(customerId);

        // TODO: test validations
    }
    /**
     * List Customer Payments
     *
     * List Customer Payment
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getPaymentsForCustomerTest() throws Exception {
        String customerId = null;
        Integer limit = null;
        String lastKey = null;
        String name = null;
        InlineResponse2003 response = api.getPaymentsForCustomer(customerId, limit, lastKey, name);

        // TODO: test validations
    }
    /**
     * List Customer Refunds
     *
     * List Customer Refund
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getRefundsForCustomerTest() throws Exception {
        String customerId = null;
        Integer limit = null;
        String lastKey = null;
        String name = null;
        InlineResponse2002 response = api.getRefundsForCustomer(customerId, limit, lastKey, name);

        // TODO: test validations
    }
    /**
     * List Customer&#x27;s Payment Details
     *
     * List all customers &lt;br&gt;&lt;br&gt;Added in version 1.1
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listPaymentDetailsTest() throws Exception {
        String customerId = null;
        InlineResponse2005 response = api.listPaymentDetails(customerId);

        // TODO: test validations
    }
    /**
     * Remove Seats
     *
     * Remove seats to a per seat subscription&lt;br&gt;&lt;br&gt;&lt;strong&gt;Since 1.1.4&lt;/strong&gt;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void removeSeatsSubscriptionsTest() throws Exception {
        SeatsRemoveBody body = null;
        String subscriptionId = null;
        InlineResponse20011 response = api.removeSeatsSubscriptions(body, subscriptionId);

        // TODO: test validations
    }
    /**
     * Update
     *
     * Update a customer
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateCustomerTest() throws Exception {
        Customer body = null;
        String customerId = null;
        Customer response = api.updateCustomer(body, customerId);

        // TODO: test validations
    }
}
