/*
 * BillaBear
 * The REST API provided by BillaBear
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@billabear.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Customer;
import io.swagger.client.model.InlineResponse2009Receipts;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
/**
 * InlineResponse2009Data
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-12-28T15:35:57.107133003Z[Etc/UTC]")

public class InlineResponse2009Data {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("amount")
  private Integer amount = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("external_reference")
  private String externalReference = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("pending")
    PENDING("pending"),
    @SerializedName("completed")
    COMPLETED("completed"),
    @SerializedName("disputed")
    DISPUTED("disputed"),
    @SerializedName("partially_refunded")
    PARTIALLY_REFUNDED("partially_refunded"),
    @SerializedName("fully_refunded")
    FULLY_REFUNDED("fully_refunded");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("customer")
  private Customer customer = null;

  @SerializedName("receipts")
  private List<InlineResponse2009Receipts> receipts = null;

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public UUID getId() {
    return id;
  }

  public InlineResponse2009Data amount(Integer amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @Schema(example = "1000", description = "")
  public Integer getAmount() {
    return amount;
  }

  public void setAmount(Integer amount) {
    this.amount = amount;
  }

  public InlineResponse2009Data currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Three-letter ISO currency code. Must be upper-case
   * @return currency
  **/
  @Schema(example = "EUR", description = "Three-letter ISO currency code. Must be upper-case")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public InlineResponse2009Data externalReference(String externalReference) {
    this.externalReference = externalReference;
    return this;
  }

   /**
   * Get externalReference
   * @return externalReference
  **/
  @Schema(description = "")
  public String getExternalReference() {
    return externalReference;
  }

  public void setExternalReference(String externalReference) {
    this.externalReference = externalReference;
  }

  public InlineResponse2009Data status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public InlineResponse2009Data createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public InlineResponse2009Data customer(Customer customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @Schema(description = "")
  public Customer getCustomer() {
    return customer;
  }

  public void setCustomer(Customer customer) {
    this.customer = customer;
  }

  public InlineResponse2009Data receipts(List<InlineResponse2009Receipts> receipts) {
    this.receipts = receipts;
    return this;
  }

  public InlineResponse2009Data addReceiptsItem(InlineResponse2009Receipts receiptsItem) {
    if (this.receipts == null) {
      this.receipts = new ArrayList<InlineResponse2009Receipts>();
    }
    this.receipts.add(receiptsItem);
    return this;
  }

   /**
   * Get receipts
   * @return receipts
  **/
  @Schema(description = "")
  public List<InlineResponse2009Receipts> getReceipts() {
    return receipts;
  }

  public void setReceipts(List<InlineResponse2009Receipts> receipts) {
    this.receipts = receipts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2009Data inlineResponse2009Data = (InlineResponse2009Data) o;
    return Objects.equals(this.id, inlineResponse2009Data.id) &&
        Objects.equals(this.amount, inlineResponse2009Data.amount) &&
        Objects.equals(this.currency, inlineResponse2009Data.currency) &&
        Objects.equals(this.externalReference, inlineResponse2009Data.externalReference) &&
        Objects.equals(this.status, inlineResponse2009Data.status) &&
        Objects.equals(this.createdAt, inlineResponse2009Data.createdAt) &&
        Objects.equals(this.customer, inlineResponse2009Data.customer) &&
        Objects.equals(this.receipts, inlineResponse2009Data.receipts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, amount, currency, externalReference, status, createdAt, customer, receipts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2009Data {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    externalReference: ").append(toIndentedString(externalReference)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    receipts: ").append(toIndentedString(receipts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
