/*
 * BillaBear
 * The REST API provided by BillaBear
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@billabear.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Address;
import io.swagger.client.model.Customer;
import io.swagger.client.model.InvoiceLines;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
/**
 * Invoice
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-01-17T11:40:00.098774036Z[Etc/UTC]")

public class Invoice {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("number")
  private String number = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("customer")
  private Customer customer = null;

  @SerializedName("tax_total")
  private Integer taxTotal = null;

  @SerializedName("sub_total")
  private Integer subTotal = null;

  @SerializedName("amount_due")
  private Integer amountDue = null;

  @SerializedName("paid")
  private Boolean paid = null;

  @SerializedName("pay_link")
  private String payLink = null;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("paid_at")
  private String paidAt = null;

  @SerializedName("due_date")
  private String dueDate = null;

  @SerializedName("biller_address")
  private Address billerAddress = null;

  @SerializedName("payeeaddress")
  private Address payeeaddress = null;

  @SerializedName("lines")
  private List<InvoiceLines> lines = null;

  public Invoice id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public Invoice number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @Schema(example = "1023045", description = "")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public Invoice currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @Schema(example = "USD", description = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public Invoice customer(Customer customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @Schema(description = "")
  public Customer getCustomer() {
    return customer;
  }

  public void setCustomer(Customer customer) {
    this.customer = customer;
  }

  public Invoice taxTotal(Integer taxTotal) {
    this.taxTotal = taxTotal;
    return this;
  }

   /**
   * Get taxTotal
   * @return taxTotal
  **/
  @Schema(description = "")
  public Integer getTaxTotal() {
    return taxTotal;
  }

  public void setTaxTotal(Integer taxTotal) {
    this.taxTotal = taxTotal;
  }

  public Invoice subTotal(Integer subTotal) {
    this.subTotal = subTotal;
    return this;
  }

   /**
   * Get subTotal
   * @return subTotal
  **/
  @Schema(description = "")
  public Integer getSubTotal() {
    return subTotal;
  }

  public void setSubTotal(Integer subTotal) {
    this.subTotal = subTotal;
  }

  public Invoice amountDue(Integer amountDue) {
    this.amountDue = amountDue;
    return this;
  }

   /**
   * Get amountDue
   * @return amountDue
  **/
  @Schema(description = "")
  public Integer getAmountDue() {
    return amountDue;
  }

  public void setAmountDue(Integer amountDue) {
    this.amountDue = amountDue;
  }

  public Invoice paid(Boolean paid) {
    this.paid = paid;
    return this;
  }

   /**
   * Get paid
   * @return paid
  **/
  @Schema(description = "")
  public Boolean isPaid() {
    return paid;
  }

  public void setPaid(Boolean paid) {
    this.paid = paid;
  }

  public Invoice payLink(String payLink) {
    this.payLink = payLink;
    return this;
  }

   /**
   * Get payLink
   * @return payLink
  **/
  @Schema(example = "https://demo.billabear.com/paylink", description = "")
  public String getPayLink() {
    return payLink;
  }

  public void setPayLink(String payLink) {
    this.payLink = payLink;
  }

  public Invoice createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public Invoice paidAt(String paidAt) {
    this.paidAt = paidAt;
    return this;
  }

   /**
   * Get paidAt
   * @return paidAt
  **/
  @Schema(description = "")
  public String getPaidAt() {
    return paidAt;
  }

  public void setPaidAt(String paidAt) {
    this.paidAt = paidAt;
  }

  public Invoice dueDate(String dueDate) {
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Get dueDate
   * @return dueDate
  **/
  @Schema(description = "")
  public String getDueDate() {
    return dueDate;
  }

  public void setDueDate(String dueDate) {
    this.dueDate = dueDate;
  }

  public Invoice billerAddress(Address billerAddress) {
    this.billerAddress = billerAddress;
    return this;
  }

   /**
   * Get billerAddress
   * @return billerAddress
  **/
  @Schema(description = "")
  public Address getBillerAddress() {
    return billerAddress;
  }

  public void setBillerAddress(Address billerAddress) {
    this.billerAddress = billerAddress;
  }

  public Invoice payeeaddress(Address payeeaddress) {
    this.payeeaddress = payeeaddress;
    return this;
  }

   /**
   * Get payeeaddress
   * @return payeeaddress
  **/
  @Schema(description = "")
  public Address getPayeeaddress() {
    return payeeaddress;
  }

  public void setPayeeaddress(Address payeeaddress) {
    this.payeeaddress = payeeaddress;
  }

  public Invoice lines(List<InvoiceLines> lines) {
    this.lines = lines;
    return this;
  }

  public Invoice addLinesItem(InvoiceLines linesItem) {
    if (this.lines == null) {
      this.lines = new ArrayList<InvoiceLines>();
    }
    this.lines.add(linesItem);
    return this;
  }

   /**
   * Get lines
   * @return lines
  **/
  @Schema(description = "")
  public List<InvoiceLines> getLines() {
    return lines;
  }

  public void setLines(List<InvoiceLines> lines) {
    this.lines = lines;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Invoice invoice = (Invoice) o;
    return Objects.equals(this.id, invoice.id) &&
        Objects.equals(this.number, invoice.number) &&
        Objects.equals(this.currency, invoice.currency) &&
        Objects.equals(this.customer, invoice.customer) &&
        Objects.equals(this.taxTotal, invoice.taxTotal) &&
        Objects.equals(this.subTotal, invoice.subTotal) &&
        Objects.equals(this.amountDue, invoice.amountDue) &&
        Objects.equals(this.paid, invoice.paid) &&
        Objects.equals(this.payLink, invoice.payLink) &&
        Objects.equals(this.createdAt, invoice.createdAt) &&
        Objects.equals(this.paidAt, invoice.paidAt) &&
        Objects.equals(this.dueDate, invoice.dueDate) &&
        Objects.equals(this.billerAddress, invoice.billerAddress) &&
        Objects.equals(this.payeeaddress, invoice.payeeaddress) &&
        Objects.equals(this.lines, invoice.lines);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, number, currency, customer, taxTotal, subTotal, amountDue, paid, payLink, createdAt, paidAt, dueDate, billerAddress, payeeaddress, lines);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Invoice {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    taxTotal: ").append(toIndentedString(taxTotal)).append("\n");
    sb.append("    subTotal: ").append(toIndentedString(subTotal)).append("\n");
    sb.append("    amountDue: ").append(toIndentedString(amountDue)).append("\n");
    sb.append("    paid: ").append(toIndentedString(paid)).append("\n");
    sb.append("    payLink: ").append(toIndentedString(payLink)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    paidAt: ").append(toIndentedString(paidAt)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    billerAddress: ").append(toIndentedString(billerAddress)).append("\n");
    sb.append("    payeeaddress: ").append(toIndentedString(payeeaddress)).append("\n");
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
